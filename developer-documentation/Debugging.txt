There are certain functions which check for errors in the database which cannot be used during normal operation of WOT.
This is because they are very expensive or destroy the database.

They can only be manually executed by developers. And as a developer you SHOULD do that periodically.

Those are:
- WebOfTrust.checkForDatabaseLeaks(). It will delete all identities in the database which should also delete ALL other objects.
  Then it will check whether objects of any class still exist in the database. If they do, they are leaks.
  Ideally, you would use this on a WOT database upon which WOT has been running for quite a few days. 
  Usually you should use this function whenever you modify what is stored in the database to make sure you don't leak stuff..
  
- Assertions. Use the "-ea" switch of Java to enable them. Ideally, you would sometimes do a test run which consists of:
	* Starting WOT with a fresh database and assertions enabled
	* Creating at least one own identity
	* Letting WOT run over night or longer until it has fetched all on-network identities.
	  This will generate lots of traffic on all functions of WOT and might trigger AssertionFailedError exception which
	  should show up in the log files. You can also set a breakpoint on those exceptions in Eclipse.
  Usually you should do an assertion test run whenever you modify the score computation algorithms since they are heavily
  guarded by assertions.